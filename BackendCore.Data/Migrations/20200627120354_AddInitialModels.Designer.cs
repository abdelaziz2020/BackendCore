// <auto-generated />
using System;
using BackendCore.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendCore.Data.Migrations
{
    [DbContext(typeof(BackendCoreDbContext))]
    [Migration("20200627120354_AddInitialModels")]
    partial class AddInitialModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendCore.Entities.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "Add",
                            CreatedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(5132),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(5163),
                            NameAr = "اضافة",
                            NameEn = "Add"
                        },
                        new
                        {
                            Id = 2L,
                            Code = "Edit",
                            CreatedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(8889),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(8899),
                            NameAr = "تعديل",
                            NameEn = "Edit"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "View",
                            CreatedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(8937),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(8938),
                            NameAr = "عرض",
                            NameEn = "View"
                        },
                        new
                        {
                            Id = 4L,
                            Code = "Delete",
                            CreatedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(8940),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 6, 27, 16, 3, 54, 204, DateTimeKind.Local).AddTicks(8941),
                            NameAr = "حذف",
                            NameEn = "Delete"
                        });
                });

            modelBuilder.Entity("BackendCore.Entities.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2020, 6, 27, 16, 3, 54, 191, DateTimeKind.Local).AddTicks(2916),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 6, 27, 16, 3, 54, 191, DateTimeKind.Local).AddTicks(7695),
                            NameAr = "مدير",
                            NameEn = "Admin"
                        });
                });

            modelBuilder.Entity("BackendCore.Entities.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2020, 6, 27, 16, 3, 54, 193, DateTimeKind.Local).AddTicks(7647),
                            Email = "Admin@admin.com",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2020, 6, 27, 16, 3, 54, 193, DateTimeKind.Local).AddTicks(7670),
                            NameAr = "مدير",
                            NameEn = "Admin",
                            Password = "ALZ9PvYMXnnwSioWiMEDkNTNf2Vzdc/c5A9ir4Bgl90PohQfSrnSQLqyM9vK6Q7IZw==",
                            Phone = "01016670280",
                            RoleId = 1L,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BackendCore.Entities.Entities.User", b =>
                {
                    b.HasOne("BackendCore.Entities.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
